<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://marksinkovics.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://marksinkovics.github.io/" rel="alternate" type="text/html" /><updated>2023-06-16T18:56:32+00:00</updated><id>https://marksinkovics.github.io/feed.xml</id><title type="html">Mark Sinkovics - Personal site</title><subtitle>This website contains my experiences around programming
</subtitle><author><name>Mark Sinkovics</name></author><entry><title type="html">SwiftUI - Detect multiple tap gestures</title><link href="https://marksinkovics.github.io/blog/2021/09/19/swiftui_detect_multiple_tap_gestures/" rel="alternate" type="text/html" title="SwiftUI - Detect multiple tap gestures" /><published>2021-09-19T00:00:00+00:00</published><updated>2021-09-19T00:00:00+00:00</updated><id>https://marksinkovics.github.io/blog/2021/09/19/swiftui_detect_multiple_tap_gestures</id><content type="html" xml:base="https://marksinkovics.github.io/blog/2021/09/19/swiftui_detect_multiple_tap_gestures/"><![CDATA[<p>SwiftUI offers a super easy way to recognize simple gestures and detect different gestures simultaneously on a view, for example long press, tap, magnification or rotate. However, the task gets complicated when multiple tap gestures must be recognized with various tap counts like single tap, double tap exclusively.</p>

<p>The simplest way would to use <code class="language-swift highlight highlighter-rouge"><span class="n">simultaneousGesture</span></code> function for each gesture that we want to recognize.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="kd">struct</span> <span class="kt">GestureExample</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Rectangle</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">red</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">frame</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">alignment</span><span class="p">:</span> <span class="o">.</span><span class="n">center</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">simultaneousGesture</span><span class="p">(</span><span class="kt">LongPressGesture</span><span class="p">()</span><span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">event</span> <span class="k">in</span>
                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Long tap"</span><span class="p">)</span>
            <span class="p">})</span>
            <span class="o">.</span><span class="nf">simultaneousGesture</span><span class="p">(</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">event</span> <span class="k">in</span>
                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Single tap"</span><span class="p">)</span>
            <span class="p">})</span>
            <span class="o">.</span><span class="nf">simultaneousGesture</span><span class="p">(</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">event</span> <span class="k">in</span>
                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Double tap"</span><span class="p">)</span>
            <span class="p">})</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Although it is able to recognize long tap and single tap separately, in the case of double tap it triggers both single and double tap gesture recognizers. Here is the given output for double tap</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="s">"Single tap"</span>
<span class="s">"Double tap"</span>
<span class="s">"Single tap"</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>The solution should be to “combine” single and double tap gesture recognizers and invoce a callback method if one of it was fired. Fortunately, by using <code class="language-swift highlight highlighter-rouge"><span class="kt">SimultaneousGesture</span></code> we could reach the same result. During the initalization it requires 2 different type of gesture recognizers. The <code class="language-swift highlight highlighter-rouge"><span class="n">onEnded</span></code> function calls a compilation block if one of the gesture got recognized. The compilation block get called with a <code class="language-swift highlight highlighter-rouge"><span class="kt">SimultaneousGesture</span><span class="o">.</span><span class="kt">Value</span></code> struct with parameter <code class="language-swift highlight highlighter-rouge"><span class="n">first</span></code> and <code class="language-swift highlight highlighter-rouge"><span class="n">second</span></code> it will be valid (not nil) <code class="language-swift highlight highlighter-rouge"><span class="kt">Gesture</span></code> object if the given gestuire was recognized. Here is an example:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="kd">struct</span> <span class="kt">GestureExample</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Rectangle</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">red</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">frame</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">alignment</span><span class="p">:</span> <span class="o">.</span><span class="n">center</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">gesture</span><span class="p">(</span><span class="kt">SimultaneousGesture</span><span class="p">(</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">1</span><span class="p">),</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">2</span><span class="p">))</span>
                        <span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">gestures</span> <span class="k">in</span>
                            <span class="k">if</span> <span class="n">gestures</span><span class="o">.</span><span class="n">second</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
                                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Double tap"</span><span class="p">)</span>
                            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">gestures</span><span class="o">.</span><span class="n">first</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
                                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Single tap"</span><span class="p">)</span>
                            <span class="p">}</span>
                        <span class="p">})</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Combine this with a previous solution now we are able to recognize long tap, sinle and double tap separately Here is a simple example code to demonstrate it:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="kd">struct</span> <span class="kt">GestureExample</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Rectangle</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">red</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">frame</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">alignment</span><span class="p">:</span> <span class="o">.</span><span class="n">center</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">simultaneousGesture</span><span class="p">(</span><span class="kt">LongPressGesture</span><span class="p">()</span><span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">event</span> <span class="k">in</span>
                <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Long tap"</span><span class="p">)</span>
            <span class="p">})</span>
            <span class="o">.</span><span class="nf">simultaneousGesture</span><span class="p">(</span>
                <span class="kt">SimultaneousGesture</span><span class="p">(</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">1</span><span class="p">),</span><span class="kt">TapGesture</span><span class="p">(</span><span class="nv">count</span><span class="p">:</span> <span class="mi">2</span><span class="p">))</span>
                    <span class="o">.</span><span class="n">onEnded</span> <span class="p">{</span> <span class="n">gestures</span> <span class="k">in</span>
                        <span class="k">if</span> <span class="n">gestures</span><span class="o">.</span><span class="n">second</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
                            <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Double tap"</span><span class="p">)</span>
                        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">gestures</span><span class="o">.</span><span class="n">first</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
                            <span class="nf">debugPrint</span><span class="p">(</span><span class="s">"Single tap"</span><span class="p">)</span>
                        <span class="p">}</span>
                    <span class="p">})</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="links">Links</h3>

<ul>
  <li><a href="https://developer.apple.com/documentation/swiftui/gestures">Apple Dev Docs - SwiftUI Gesture</a></li>
</ul>]]></content><author><name>Mark Sinkovics</name></author><category term="blog" /><category term="swiftui" /><category term="gesture" /><category term="swift" /><category term="ios" /><summary type="html"><![CDATA[SwiftUI offers a super easy way to recognize simple gestures and detect different gestures simultaneously on a view, for example long press, tap, magnification or rotate. However, the task gets complicated when multiple tap gestures must be recognized with various tap counts like single tap, double tap exclusively.]]></summary></entry></feed>